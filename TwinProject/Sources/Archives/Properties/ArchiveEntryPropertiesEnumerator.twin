[ COMCreatable (False) ]
[ ClassId ("6EE34D24-32C5-4EBF-8916-A458B1E56644") ]
Private Class ArchiveEntryPropertiesEnumerator
    Implements IEnumVARIANT

    Private Type TData
        CurrentIndex As Long
        EntryIndex As long
        PropertiesCount As Long
        PropIDs() As ItemPropId
        InArchive As IInArchive
        Id As ItemPropId
        Name As String
        Value As Variant
    End Type
    Private This As TData

    Friend Sub New(InArchive As IInArchive, EntryIndex As Long, Optional CurrentIndex As Long = 0)
    	This.CurrentIndex = CurrentIndex
        This.EntryIndex = EntryIndex
        Set This.InArchive = InArchive
        
        This.InArchive.GetNumberOfProperties(This.PropertiesCount)
        ReDim This.PropIDs(0 To (This.PropertiesCount - 1))
        Dim Index As Long
        For Index = 0 To (This.PropertiesCount - 1)
        	Dim Ignored1 As String
            Dim Ignored2 As Integer
            This.InArchive.GetPropertyInfo(Index, Ignored1, This.PropIDs(Index), Ignored2)
        Next
    End Sub

    Private Sub Next(ByVal celt As Long, ByRef rgvar As Variant, ByRef pceltFetched As Long) Implements IEnumVARIANT.Next
        If VarPtr(rgvar) = 0 Then
            Err.ReturnHResult = E_INVALIDARG
            Exit Sub
        End If

        Dim Index As Long
        If celt = 1 Then
            If This.CurrentIndex < This.PropertiesCount Then
                Index = 1

                Dim vt As Integer
                Dim tmpId As ItemPropId
                Dim tmpName As String
                Dim tmpValue As Variant

                This.InArchive.GetPropertyInfo(This.CurrentIndex, tmpName, tmpId, vt)
                This.InArchive.GetProperty(This.EntryIndex, tmpId, tmpValue)
                CastPropVariantToVariant(tmpValue)
                This.Name = ItemPropIdAsString(tmpId, tmpName)

                Set rgvar = New ArchivePropertyInfo(tmpId, ItemPropIdAsString(tmpId, tmpName), tmpValue)
                This.CurrentIndex += 1
            End If
        Else
            Err.ReturnHResult = E_INVALIDARG
            Exit Sub
        End If
        
        If VarPtr(pceltFetched) <> 0 Then
            pceltFetched = Index
        End If

        Err.ReturnHResult = If(celt > Index, S_FALSE, S_OK)
    End Sub

    Private Sub Skip(ByVal celt As Long) Implements IEnumVARIANT.Skip
        This.CurrentIndex += celt
        If This.CurrentIndex > This.PropertiesCount Then
            This.CurrentIndex = This.PropertiesCount
        End If
    End Sub

    Private Sub Reset() Implements IEnumVARIANT.Reset
    	This.CurrentIndex = 0
    End Sub

    Private Sub Clone(ByRef ppenum As IEnumVARIANT) Implements IEnumVARIANT.Clone
        Set ppenum = New ArchiveEntryPropertiesEnumerator(This.InArchive, This.CurrentIndex)
    End Sub
End Class