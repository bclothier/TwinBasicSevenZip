Private Module Declares
    Public Type GUID
        Data1 As Long
        Data2 As Integer
        Data3 As Integer
        'Data4(0 To 7) As Byte
        Data4 As Currency
    End Type

    Public Type FILETIME
        dwLowDateTime As Long
        dwHighDateTime As Long
    End Type

    Public Type SYSTEMTIME
        wYear  As Integer
        wMonth As Integer
        wDayOfWeek As Integer
        wDay As Integer
        wHour As Integer
        wMinute As Integer
        wSecond As Integer
        wMilliseconds As Integer
    End Type
    
    ' PSSTDAPI InitVariantFromFileTime(
    '   [in]  const FILETIME *pft,
    '   [out] VARIANT        *pvar
    ' );
    Public Declare PtrSafe Function InitVariantFromFileTime Lib "Propsys" ( _ 
        ByRef pft As FILETIME, _
        ByRef pvar As Variant _
    ) As Long

    Public Enum PSTIME_FLAGS
        PSTF_UTC = 0
        PSTF_LOCAL = 1
    End Enum

    ' PSSTDAPI PropVariantToFileTime(
    '   [in]  REFPROPVARIANT propvar,
    '   [in]  PSTIME_FLAGS   pstfOut,
    '   [out] FILETIME       *pftOut
    ' );
    Public Declare PtrSafe Function PropVariantToFileTime Lib "Propsys" ( _
        ByRef propvar As Variant, _
        ByVal pstfOut As PSTIME_FLAGS, _ 
        ByRef pftOut As FILETIME _ 
    ) As Long

    ' PSSTDAPI InitPropVariantFromFileTime(
    '   [in]  const FILETIME *pftIn,
    '   [out] PROPVARIANT    *ppropvar
    ' );    
    Public Declare PtrSafe Function InitPropVariantFromFileTime Lib "Propsys" ( _
        ByRef pftIn As FILETIME, _
        ByRef ppropvar As Variant _ 
    ) As Long


    ' PSSTDAPI PropVariantToVariant(
    '   [in]  const PROPVARIANT *pPropVar,
    '   [out] VARIANT           *pVar
    ' );
    Public Declare PtrSafe Function PropVariantToVariant Lib "Propsys" ( _ 
        ByRef pPropVar As Variant, _ 
        ByRef pVar As Variant _ 
    ) As Long

    ' PSSTDAPI VariantToPropVariant(
    '   [in]  const VARIANT *pVar,
    '   [out] PROPVARIANT   *pPropVar
    ' );    
    Public Declare PtrSafe Function VariantToPropVariant Lib "Propsys" ( _ 
        ByRef pVar As Variant, _ 
        ByRef pPropVar As Variant _ 
    ) As Long

    ' PSSTDAPI PropVariantChangeType(
    '   [out] PROPVARIANT          *ppropvarDest,
    '   [in]  REFPROPVARIANT       propvarSrc,
    '   [in]  PROPVAR_CHANGE_FLAGS flags,
    '   [in]  VARTYPE              vt
    ' );
    Public Declare PtrSafe Function PropVariantChangeType Lib "Propsys" ( _ 
        ByRef ppropvarDest As Variant, _ 
        ByRef propvarSrc As Variant, _ 
        ByVal flags As Long, _
        ByVal vt As Integer _
    ) As Long

    ' HRESULT PropVariantClear(
    '   [in, out] PROPVARIANT *pvar
    ' );
    Public Declare PtrSafe Function PropVariantClear Lib "Ole32" ( _ 
        ByRef pPropVar As Variant _ 
    ) As Long

    Public Type CStreamFileProps
        Size As LongLong
        VolID As LongLong
        FileID_Low As LongLong
        FileID_High As LongLong
        NumLinks As Long
        Attribs As Long
        CTime As FILETIME
        ATime As FILETIME
        MTime As FILETIME
    End Type

    ' HRESULT CLSIDFromString(
    '   [in]  LPCOLESTR lpsz,
    '   [out] LPCLSID   pclsid
    ' );
    Public DeclareWide PtrSafe Function CLSIDFromString Lib "ole32" (ByVal lpsz As String, ByRef pclsid As GUID) As Long

    ' HRESULT IIDFromString(
    '   [in]  LPCOLESTR lpsz,
    '   [out] LPIID     lpiid
    ' );
    Public DeclareWide PtrSafe Function IIDFromString Lib "ole32" (ByVal lpsz As String, ByRef lpiid As GUID) As Long

    ' int StringFromGUID2(
    '   [in]  REFGUID  rguid,
    '   [out] LPOLESTR lpsz,
    '   [in]  int      cchMax
    ' );    
    Public DeclareWide PtrSafe Function StringFromGUID2 Lib "ole32" (ByRef rguid As GUID, ByVal lpsz As String, ByVal cchMax As Long) As Long

    ' HMODULE LoadLibraryW(
    '   [in] LPCWSTR lpLibFileName
    ' );
    Public DeclareWide PtrSafe Function LoadLibraryW Lib "kernel32" (ByVal lpLibFileName As String) As LongPtr

    ' BOOL FreeLibrary(
    '   [in] HMODULE hLibModule
    ' );
    Public DeclareWide PtrSafe Function FreeLibrary Lib "kernel32" (ByVal hLibModule As LongPtr) As Long

    ' VOID RtlMoveMemory(
    '   _Out_       VOID UNALIGNED *Destination,
    '   _In_  const VOID UNALIGNED *Source,
    '   _In_        SIZE_T         Length
    ' );
    Public Declare PtrSafe Sub RtlMoveMemory Lib "NtDll" (Destination As Any, Source As Any, ByVal Length As LongPtr)
    
    Public Declare PtrSafe Function GetCurrentThreadId Lib "kernel32" () As Long

    Public Enum KNWONFOLDERFLAGS
        KF_FLAG_DEFAULT = &H00000000
        KF_FLAG_FORCE_APP_DATA_REDIRECTION = &H00080000
        KF_FLAG_RETURN_FILTER_REDIRECTION_TARGET = &H00040000
        KF_FLAG_FORCE_PACKAGE_REDIRECTION = &H00020000
        KF_FLAG_NO_PACKAGE_REDIRECTION = &H00010000
        KF_FLAG_FORCE_APPCONTAINER_REDIRECTION = &H00020000
        KF_FLAG_NO_APPCONTAINER_REDIRECTION = &H00010000
        KF_FLAG_CREATE = &H00008000
        KF_FLAG_DONT_VERIFY = &H00004000
        KF_FLAG_DONT_UNEXPAND = &H00002000
        KF_FLAG_NO_ALIAS = &H00001000
        KF_FLAG_INIT = &H00000800
        KF_FLAG_DEFAULT_PATH = &H00000400
        KF_FLAG_NOT_PARENT_RELATIVE = &H00000200
        KF_FLAG_SIMPLE_IDLIST = &H00000100
        KF_FLAG_ALIAS_ONLY = &H80000000
    End Enum
    
    ' HRESULT SHGetKnownFolderPath(
    '   [in]           REFKNOWNFOLDERID rfid,
    '   [in]           DWORD            dwFlags,
    '   [in, optional] HANDLE           hToken,
    '   [out]          PWSTR            *ppszPath
    ' );
    Private Declare PtrSafe Function SHGetKnownFolderPath Lib "shell32" ( _ 
        ByRef rfid As GUID, _ 
        ByVal dwFlags As KNWONFOLDERFLAGS, _ 
        ByVal hToken As LongPtr, _ 
        ByRef ppszPath As LongPtr _
    ) As Long

    ' void CoTaskMemFree(
    '   [in, optional] _Frees_ptr_opt_ LPVOID pv
    ' );
    Private Declare PtrSafe Sub CoTaskMemFree Lib "ole32" ( _ 
        ByVal pv As LongPtr _ 
    )

    Private Declare PtrSafe Function lstrlen Lib "kernel32" Alias "lstrlenW" ( _
        ByVal lpString As LongPtr _
    ) As Long

    ' BSTR SysAllocStringLen(
    '   [in] const OLECHAR *strIn,
    '   [in] UINT          ui
    ' );
    Private DeclareWide PtrSafe Function SysAllocStringLen Lib "oleaut32" ( _ 
        ByVal strIn As LongPtr, _ 
        ByVal ui As Long _
    ) As String

    Public Enum ProgramFilesBitness
        ProgramFilesDefault
        ProgramFilesX64
        ProgramFilesX32
    End Enum

    Public Function GetProgramFilesPath(Optional Bitness As ProgramFilesBitness = ProgramFilesBitness.ProgramFilesDefault) As String
        Const FOLDERID_ProgramFiles    As String = "{905e63b6-c1bf-494e-b29c-65b732d3d21a}"
        Const FOLDERID_ProgramFilesX64 As String = "{6D809377-6AF0-444b-8957-A3773F02200E}"
        Const FOLDERID_ProgramFilesX86 As String = "{7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}"

        Dim folderIdString As String
        Select Case Bitness
            Case ProgramFilesBitness.ProgramFilesDefault
                folderIdString = FOLDERID_ProgramFiles
            Case ProgramFilesBitness.ProgramFilesX32
                folderIdString = FOLDERID_ProgramFilesX86
            Case ProgramFilesBitness.ProgramFilesX64
                folderIdString = FOLDERID_ProgramFilesX64
            Case Else
                Err.Raise 5, CurrentProcedureName, "Invalid value for parameter 'Bitness'; it must be one of the ProgramFilesBitness enum values."
        End Select
        
        Dim folderId As GUID
        Dim hr As Long
        hr = CLSIDFromString(folderIdString, folderId)
        If hr < 0 Then
            Err.Raise hr
        End If

        Dim ptr As LongPtr
        hr = SHGetKnownFolderPath(folderId, 0, 0, ptr)
        If hr = 0 Then
            Dim Result As String
            Result = SysAllocStringLen(ptr, lstrlen(ptr))
        End If
        CoTaskMemFree (ptr)
        Return Result
    End Function
End Module