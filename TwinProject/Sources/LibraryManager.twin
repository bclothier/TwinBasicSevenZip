Private Class LibraryManager
    Private Enum DllType
    	FullDll = 1 ' => 7z.dll
        SlimDll = 2 ' => 7za.dll
        TinyDll = 3 ' => 7zxa.dll
    End Enum

    Private Type TData
        LibModuleHandle As LongPtr
        LibPath As String
        DllName As String
        Type As DllType
    End Type
    Private This As TData

    Public Function CreateInArchive(Format As InArchiveFormat) As IInArchive
        Dim hr As Long
        Dim clsId As GUID
        Dim iid As GUID
        Dim ia As IInArchive

        If TryGetInFormatClsId(Format, clsId) = False Then
            Err.Raise 5, CurrentComponentName & "." & CurrentProcedureName, "Unable to obtain a valid CLSID for the given format (" & Format & ")."
        End If
        IIDFromString "{23170F69-40C1-278A-0000-000600600000}", iid

        Select Case This.Type
            Case DllType.FullDll
                hr = SevenZipFullCreateObject(clsId, iid, ia)
            Case DllType.SlimDll
                hr = SevenZipSlimCreateObject(clsId, iid, ia)
            Case DllType.TinyDll
                hr = SevenZipTinyCreateObject(clsId, iid, ia)
        End Select

        If hr = 0 Then
            Return ia
        Else
            Err.ReturnHResult = hr
        End If
    End Function

    Public Function CreateOutArchive(Format As OutArchiveFormat) As IOutArchive
        Dim hr As Long
        Dim clsId As GUID
        Dim iid As GUID
        Dim oa As IOutArchive

        If TryGetOutFormatClsId(Format, clsId) = False Then
            Err.Raise 5, CurrentComponentName & "." & CurrentProcedureName, "Unable to obtain a valid CLSID for the given format (" & Format & ")."
        End If
        IIDFromString "{23170F69-40C1-278A-0000-000600A00000}", iid

        Select Case This.Type
            Case DllType.FullDll
                hr = SevenZipFullCreateObject(clsId, iid, oa)
            Case DllType.SlimDll
                hr = SevenZipSlimCreateObject(clsId, iid, oa)
            Case DllType.TinyDll
                hr = SevenZipTinyCreateObject(clsId, iid, oa)
        End Select

        If hr = 0 Then
            Return oa
        Else
            Err.ReturnHResult = hr
        End If
    End Function

    Public Sub New(LibPath As String)
        Dim DllName As String = FSO.GetFileName(LibPath)
        Dim Type As DllType
        Select Case DllName
            Case "7z.dll"
                Type = DllType.FullDll
            Case "7za.dll"
                Type = DllType.SlimDll
            Case "7zxa.dll"
                Type = DllType.TinyDll
            Case Else
                Err.Raise 5, CurrentProjectName & "." & CurrentComponentName, "Invalid DLL name. Must be '7z.dll', '7za.dll' or '7zxa.dll'. Check the LibPath parameter: '" & LibPath & "'"
        End Select

        If Free() = False Then
            Err.Raise 5, CurrentProjectName & "." & CurrentComponentName, "Unable to free the previously loaded library. This is fatal; restarting is recommended."
        End If

        This.LibModuleHandle = LoadLibraryW(LibPath)

        If This.LibModuleHandle <> 0 Then
            This.LibPath = LibPath
            This.DllName = DllName
            This.Type = Type
        End If
    End Sub

    Private Sub Class_Terminate()
        Free ()
    End Sub

    Private Function Free() As Boolean
    	If This.LibModuleHandle <> 0 Then
            If FreeLibrary(This.LibModuleHandle) Then
                This.LibModuleHandle = 0
                This.LibPath = vbNullString
                This.DllName = vbNullString
            End If
        End If

        Return (This.LibModuleHandle = 0)
    End Function
End Class