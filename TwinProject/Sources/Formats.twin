Public Module Formats
    Public Enum StreamSeekOrigin
    	SZ_SEEK_SET = 0
        SZ_SEEK_CUR = 1
        SZ_SEEK_END = 2
    End Enum

    [ Description ("Stores file extraction modes.") ]
    Public Enum AskMode
        ' Extraction mode
        Extract = 0
        ' Test mode
        Test
        ' Skip mode
        Skip
    End Enum
    
    [ Description ("Stores operation result values.") ]
    Public Enum OperationResult
        ' Success
        Ok = 0
        ' Method is unsupported
        UnsupportedMethod
        ' Data error has occured
        DataError
        ' CrcError has occured
        CrcError
        ' File is unavailable
        Unavailable
        ' Unexpected end of file
        UnexpectedEnd
        ' Data after end of archive
        DataAfterEnd
        ' File is not archive
        IsNotArc
        ' Archive headers error
        HeadersError
        ' Wrong password
        WrongPassword
    End Enum

    [ Description ("Codes of item properties") ]
    Public Enum ItemPropId
        ' No property
        NoProperty = 0
        MainSubfile
        ' Handler item index
        HandlerItemIndex
        ' Item path
        Path
        ' Item name
        Name
        ' Item extension
        Extension
        ' true if the item is a folder; otherwise, false
        IsDirectory
        ' Item size
        Size
        ' Item packed sise; usually absent
        PackedSize
        ' Item attributes; usually absent
        Attributes
        ' Item creation time; usually absent
        CreationTime
        ' Item last access time; usually absent
        LastAccessTime
        ' Item last write time
        LastWriteTime
        ' true if the item is solid; otherwise, false
        Solid
        ' true if the item is commented; otherwise, false
        Commented
        ' true if the item is encrypted; otherwise, false
        Encrypted
        ' (?)
        SplitBefore
        ' (?)
        SplitAfter
        ' Dictionary size(?)
        DictionarySize
        ' Item CRC checksum
        Crc
        ' Item type(?)
        Type
        ' (?)
        IsAnti
        ' Compression method
        Method
        ' (?); usually absent
        HostOS
        ' Item file system; usually absent
        FileSystem
        ' Item user(?); usually absent
        User
        ' Item group(?); usually absent
        Group
        ' Bloack size(?)
        Block
        ' Item comment; usually absent
        Comment
        ' Item position
        Position
        ' Item prefix(?)
        Prefix
        ' Number of subdirectories
        NumSubDirs
        ' Numbers of subfiles
        NumSubFiles
        ' The archive legacy unpacker version
        UnpackVersion
        ' Volume(?)
        Volume
        ' Is a volume
        IsVolume
        ' Offset value(?)
        Offset
        ' Links(?)
        Links
        ' Number of blocks
        NumBlocks
        ' Number of volumes(?)
        NumVolumes
        ' Time type(?)
        TimeType
        ' 64-bit(?)
        Bit64
        ' BigEndian
        BigEndian
        ' Cpu(?)
        Cpu
        ' Physical archive size
        PhysicalSize
        ' Headers size
        HeadersSize
        ' Archive checksum
        Checksum
        Characts
        Va
        Id
        ShortName
        CreatorApp
        SectorSize
        PosixAttrib
        SymLink
        Error
        ' (?)
        TotalSize
        ' (?)
        FreeSpace
        ' Cluster size(?)
        ClusterSize
        ' Volume name(?)
        VolumeName
        ' Local item name(?); usually absent
        LocalName
        ' (?)
        Provider
        NtSecure
        IsAltStream
        IsAux
        IsDeleted
        IsTree
        Sha1
        Sha256
        ErrorType
        NumErrors
        ErrorFlags
        WarningFlags
        Warning
        NumStreams
        NumAltStreams
        AltStreamsSize
        VirtualSize
        UnpackSize
        TotalPhySize
        ' Index of the Volume
        VolumeIndex
        SubType
        ShortComment
        CodePage
        IsNotArcType
        PhySizeCantBeDetected
        ZerosTailIsAllowed
        TailSize
        EmbeddedStubSize
        NtReparse
        HardLink
        INode
        StreamId
        ReadOnly
        OutName
        CopyLink
        NumDefined
        ' User defined property; usually absent
        UserDefined = &H10000&
    End Enum

    [ Description ("Readable archive format enumeration.") ]
    Public Enum InArchiveFormat
        ' Open 7-zip archive format. http://en.wikipedia.org/wiki/7-zip
        SevenZip
        ' Proprietary Arj archive format. http://en.wikipedia.org/wiki/ARJ
        Arj
        ' Open Bzip2 archive format. http://en.wikipedia.org/wiki/Bzip2
        BZip2
        ' Microsoft cabinet archive format. http://en.wikipedia.org/wiki/Cabinet_(file_format)
        Cab
        ' Microsoft Compiled HTML Help file format. http://en.wikipedia.org/wiki/Microsoft_Compiled_HTML_Help
        Chm
        ' Microsoft Compound file format. http://en.wikipedia.org/wiki/Compound_File_Binary_Format
        Compound
        ' Open Cpio archive format. http://en.wikipedia.org/wiki/Cpio
        Cpio
        ' Open Debian software package format. http://en.wikipedia.org/wiki/Deb_(file_format)
        Deb
        ' Open Gzip archive format. http://en.wikipedia.org/wiki/Gzip
        GZip
        ' Open ISO disk image format. http://en.wikipedia.org/wiki/ISO_image
        Iso
        ' Open Lzh archive format. http://en.wikipedia.org/wiki/Lzh
        Lzh
        ' Open core 7-zip Lzma raw archive format. http://en.wikipedia.org/wiki/Lzma
        Lzma
        ' Nullsoft installation package format. http://en.wikipedia.org/wiki/NSIS
        Nsis
        ' RarLab Rar archive format, version 5. http://en.wikipedia.org/wiki/Rar
        Rar
        ' RarLab Rar archive format, version 4 or older. http://en.wikipedia.org/wiki/Rar
        Rar4
        ' Open Rpm software package format. http://en.wikipedia.org/wiki/RPM_Package_Manager
        Rpm
        ' Open split file format.
        Split
        ' Open Tar archive format. http://en.wikipedia.org/wiki/Tar_(file_format)
        Tar
        ' Microsoft Windows Imaging disk image format. http://en.wikipedia.org/wiki/Windows_Imaging_Format
        Wim
        ' Open LZW archive format; implemented in "compress" program; also known as "Z" archive format. http://en.wikipedia.org/wiki/Compress
        Lzw
        ' Open Zip archive format. http://en.wikipedia.org/wiki/ZIP_(file_format)
        Zip
        ' Open Udf disk image format.
        Udf
        ' Xar open source archive format. http://en.wikipedia.org/wiki/Xar_(archiver)
        Xar
        ' Mub
        Mub
        ' Macintosh Disk Image on CD. http://en.wikipedia.org/wiki/HFS_Plus
        Hfs
        ' Apple Mac OS X Disk Copy Disk Image format.
        Dmg
        ' Open Xz archive format. http://en.wikipedia.org/wiki/Xz        
        XZ
        ' MSLZ archive format.
        Mslz
        ' Flash video format. http://en.wikipedia.org/wiki/Flv
        Flv
        ' Shockwave Flash format. http://en.wikipedia.org/wiki/Swf         
        Swf
        ' Windows PE executable format. http://en.wikipedia.org/wiki/Portable_Executable
        PE
        ' Linux executable Elf format. http://en.wikipedia.org/wiki/Executable_and_Linkable_Format
        Elf
        ' Windows Installer Database. http://en.wikipedia.org/wiki/Windows_Installer
        Msi
        ' Microsoft virtual hard disk file format. http://en.wikipedia.org/wiki/VHD_%28file_format%29
        Vhd
        ' SquashFS file system format. https://en.wikipedia.org/wiki/SquashFS
        SquashFS
        ' Lzma86 file format.
        Lzma86
        ' Prediction by Partial Matching by Dmitry algorithm. https://en.wikipedia.org/wiki/Prediction_by_partial_matching
        Ppmd
        ' TE format.
        TE
        ' UEFIc format. https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface
        UEFIc
        ' UEFIs format. https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface
        UEFIs
        ' Compressed ROM file system format. https://en.wikipedia.org/wiki/Cramfs
        CramFS
        ' APM format.
        APM
        ' Swfc format.
        Swfc
        ' NTFS file system format. https://en.wikipedia.org/wiki/NTFS
        Ntfs
        ' FAT file system format. https://en.wikipedia.org/wiki/File_Allocation_Table
        Fat
        ' MBR format. https://en.wikipedia.org/wiki/Master_boot_record
        Mbr
        ' Mach-O file format. https://en.wikipedia.org/wiki/Mach-O
        MachO
    End Enum

    [ Description ("Writable archive format enumeration.") ]
    Public Enum OutArchiveFormat
    	' Open 7-zip archive format. http://en.wikipedia.org/wiki/7-zip
        SevenZip
        ' Open Zip archive format. http://en.wikipedia.org/wiki/ZIP_(file_format)
        Zip
        ' Open Gzip archive format. http://en.wikipedia.org/wiki/Gzip
        GZip
        ' Open Bzip2 archive format. http://en.wikipedia.org/wiki/Bzip2
        BZip2
        ' Open Tar archive format. http://en.wikipedia.org/wiki/Tar_(file_format)
        Tar
        ' Open Xz archive format. http://en.wikipedia.org/wiki/Xz        
        XZ
    End Enum

    [ Description ("Compression level enumeration") ]
    Public Enum CompressionLevel
    	' No compression
        None
        ' Very low compression level
        Fast
        ' Low compression level
        Low
        ' Normal compression level (default)
        Normal
        ' High compression level
        High
        ' The best compression level (slow)
        Ultra
    End Enum

    [ Description ("Compression method enumeration.") ]
    Public Enum CompressionMethod
    	' Zip or 7-zip|no compression method.
        Copy
        ' Zip|Deflate method.
        Deflate
        ' Zip|Deflate64 method.
        Deflate64
        ' Zip or 7-zip|Bzip2 method. http://en.wikipedia.org/wiki/Cabinet_(file_format)
        BZip2
        ' Zip or 7-zip|LZMA method based on Lempel-Ziv algorithm, it is default for 7-zip.
        Lzma
        ' 7-zip|LZMA version 2, LZMA with improved multithreading and usually slight archive size decrease.
        Lzma2
        ' Zip or 7-zip|PPMd method based on Dmitry Shkarin's PPMdH source code, very efficient for compressing texts. http://en.wikipedia.org/wiki/Prediction_by_Partial_Matching
        Ppmd
        ' No method change.
        Default
    End Enum

    Private Function GetInArchiveGuidString(Format As InArchiveFormat) As String
        Select Case Format
            Case InArchiveFormat.SevenZip:  Return "{23170f69-40c1-278a-1000-000110070000}"
            Case InArchiveFormat.Arj:       Return "{23170f69-40c1-278a-1000-000110040000}"
            Case InArchiveFormat.BZip2:     Return "{23170f69-40c1-278a-1000-000110020000}"
            Case InArchiveFormat.Cab:       Return "{23170f69-40c1-278a-1000-000110080000}"
            Case InArchiveFormat.Chm:       Return "{23170f69-40c1-278a-1000-000110e90000}"
            Case InArchiveFormat.Compound:  Return "{23170f69-40c1-278a-1000-000110e50000}"
            Case InArchiveFormat.Cpio:      Return "{23170f69-40c1-278a-1000-000110ed0000}"
            Case InArchiveFormat.Deb:       Return "{23170f69-40c1-278a-1000-000110ec0000}"
            Case InArchiveFormat.GZip:      Return "{23170f69-40c1-278a-1000-000110ef0000}"
            Case InArchiveFormat.Iso:       Return "{23170f69-40c1-278a-1000-000110e70000}"
            Case InArchiveFormat.Lzh:       Return "{23170f69-40c1-278a-1000-000110060000}"
            Case InArchiveFormat.Lzma:      Return "{23170f69-40c1-278a-1000-0001100a0000}"
            Case InArchiveFormat.Nsis:      Return "{23170f69-40c1-278a-1000-000110090000}"
            Case InArchiveFormat.Rar:       Return "{23170f69-40c1-278a-1000-000110CC0000}"
            Case InArchiveFormat.Rar4:      Return "{23170f69-40c1-278a-1000-000110030000}"
            Case InArchiveFormat.Rpm:       Return "{23170f69-40c1-278a-1000-000110eb0000}"
            Case InArchiveFormat.Split:     Return "{23170f69-40c1-278a-1000-000110ea0000}"
            Case InArchiveFormat.Tar:       Return "{23170f69-40c1-278a-1000-000110ee0000}"
            Case InArchiveFormat.Wim:       Return "{23170f69-40c1-278a-1000-000110e60000}"
            Case InArchiveFormat.Lzw:       Return "{23170f69-40c1-278a-1000-000110050000}"
            Case InArchiveFormat.Zip:       Return "{23170f69-40c1-278a-1000-000110010000}"
            Case InArchiveFormat.Udf:       Return "{23170f69-40c1-278a-1000-000110E00000}"
            Case InArchiveFormat.Xar:       Return "{23170f69-40c1-278a-1000-000110E10000}"
            Case InArchiveFormat.Mub:       Return "{23170f69-40c1-278a-1000-000110E20000}"
            Case InArchiveFormat.Hfs:       Return "{23170f69-40c1-278a-1000-000110E30000}"
            Case InArchiveFormat.Dmg:       Return "{23170f69-40c1-278a-1000-000110E40000}"
            Case InArchiveFormat.XZ:        Return "{23170f69-40c1-278a-1000-0001100C0000}"
            Case InArchiveFormat.Mslz:      Return "{23170f69-40c1-278a-1000-000110D50000}"
            Case InArchiveFormat.PE:        Return "{23170f69-40c1-278a-1000-000110DD0000}"
            Case InArchiveFormat.Elf:       Return "{23170f69-40c1-278a-1000-000110DE0000}"
            Case InArchiveFormat.Swf:       Return "{23170f69-40c1-278a-1000-000110D70000}"
            Case InArchiveFormat.Vhd:       Return "{23170f69-40c1-278a-1000-000110DC0000}"
            Case InArchiveFormat.Flv:       Return "{23170f69-40c1-278a-1000-000110D60000}"
            Case InArchiveFormat.SquashFS:  Return "{23170f69-40c1-278a-1000-000110D20000}"
            Case InArchiveFormat.Lzma86:    Return "{23170f69-40c1-278a-1000-0001100B0000}"
            Case InArchiveFormat.Ppmd:      Return "{23170f69-40c1-278a-1000-0001100D0000}"
            Case InArchiveFormat.TE:        Return "{23170f69-40c1-278a-1000-000110CF0000}"
            Case InArchiveFormat.UEFIc:     Return "{23170f69-40c1-278a-1000-000110D00000}"
            Case InArchiveFormat.UEFIs:     Return "{23170f69-40c1-278a-1000-000110D10000}"
            Case InArchiveFormat.CramFS:    Return "{23170f69-40c1-278a-1000-000110D30000}"
            Case InArchiveFormat.APM:       Return "{23170f69-40c1-278a-1000-000110D40000}"
            Case InArchiveFormat.Swfc:      Return "{23170f69-40c1-278a-1000-000110D80000}"
            Case InArchiveFormat.Ntfs:      Return "{23170f69-40c1-278a-1000-000110D90000}"
            Case InArchiveFormat.Fat:       Return "{23170f69-40c1-278a-1000-000110DA0000}"
            Case InArchiveFormat.Mbr:       Return "{23170f69-40c1-278a-1000-000110DB0000}"
            Case InArchiveFormat.MachO:     Return "{23170f69-40c1-278a-1000-000110DF0000}"
        End Select
    End Function

    Private Function GetOutArchiveGuidString(Format As OutArchiveFormat) As String
        Select Case Format
            Case OutArchiveFormat.SevenZip: Return "{23170f69-40c1-278a-1000-000110070000}"
            Case OutArchiveFormat.Zip:      Return "{23170f69-40c1-278a-1000-000110010000}"
            Case OutArchiveFormat.BZip2:    Return "{23170f69-40c1-278a-1000-000110020000}"
            Case OutArchiveFormat.GZip:     Return "{23170f69-40c1-278a-1000-000110ef0000}"
            Case OutArchiveFormat.Tar:      Return "{23170f69-40c1-278a-1000-000110ee0000}"
            Case OutArchiveFormat.XZ:       Return "{23170f69-40c1-278a-1000-0001100C0000}"
        End Select
    End Function

    Public Function TryGetInFormatClsId(ByVal Format As InArchiveFormat, ByRef OutGuid As GUID) As Boolean
        Dim GuidString As String
        GuidString = GetInArchiveGuidString(Format)
        If CLSIDFromString(GuidString, OutGuid) = 0 Then
            Return True
        End If
    End Function
    
    Public Function TryGetOutFormatClsId(ByVal Format As OutArchiveFormat, ByRef OutGuid As GUID) As Boolean
        Dim GuidString As String
        GuidString = GetInArchiveGuidString(Format)
        If CLSIDFromString(GuidString, OutGuid) = 0 Then
            Return True
        End If
    End Function

    Public Function GetCompressionMethodAsString(Method As CompressionMethod) As String
    	Select Case Method
            Case CompressionMethod.Copy:        Return "Copy"
            Case CompressionMethod.Deflate:     Return "Deflate"
            Case CompressionMethod.Deflate64:   Return "Deflate64"
            Case CompressionMethod.Lzma:        Return "LZMA"
            Case CompressionMethod.Lzma2:       Return "LZMA2"
            Case CompressionMethod.Ppmd:        Return "PPMd"
            Case CompressionMethod.BZip2:       Return "BZip2"
        End Select
    End Function

    Public Function GetFormatFromFileExtension(Extension As String) As InArchiveFormat
        Select Case Extension
            Case "7z":      Return InArchiveFormat.SevenZip
            Case "gz":      Return InArchiveFormat.GZip
            Case "tar":     Return InArchiveFormat.Tar
            Case "rar":     Return InArchiveFormat.Rar
            Case "zip":     Return InArchiveFormat.Zip
            Case "lzma":    Return InArchiveFormat.Lzma
            Case "lzh":     Return InArchiveFormat.Lzh
            Case "arj":     Return InArchiveFormat.Arj
            Case "bz2":     Return InArchiveFormat.BZip2
            Case "cab":     Return InArchiveFormat.Cab
            Case "chm":     Return InArchiveFormat.Chm
            Case "deb":     Return InArchiveFormat.Deb
            Case "iso":     Return InArchiveFormat.Iso
            Case "rpm":     Return InArchiveFormat.Rpm
            Case "wim":     Return InArchiveFormat.Wim
            Case "udf":     Return InArchiveFormat.Udf
            Case "mub":     Return InArchiveFormat.Mub
            Case "xar":     Return InArchiveFormat.Xar
            Case "hfs":     Return InArchiveFormat.Hfs
            Case "dmg":     Return InArchiveFormat.Dmg
            Case "Z":       Return InArchiveFormat.Lzw
            Case "xz":      Return InArchiveFormat.XZ
            Case "flv":     Return InArchiveFormat.Flv
            Case "swf":     Return InArchiveFormat.Swf
            Case "exe":     Return InArchiveFormat.PE
            Case "dll":     Return InArchiveFormat.PE
            Case "vhd":     Return InArchiveFormat.Vhd
        End Select
    End Function

    Public Function GetFormatFromSignature(Signature As String) As InArchiveFormat
    	Select Case Signature
            Case "37-7A-BC-AF-27-1C":           Return InArchiveFormat.SevenZip
            Case "1F-8B-08":                    Return InArchiveFormat.GZip
            Case "75-73-74-61-72":              Return InArchiveFormat.Tar
            ' 257 byte offset
            Case "52-61-72-21-1A-07-00":        Return InArchiveFormat.Rar4
            Case "52-61-72-21-1A-07-01-00":     Return InArchiveFormat.Rar
            Case "50-4B-03-04":                 Return InArchiveFormat.Zip
            Case "5D-00-00-40-00":              Return InArchiveFormat.Lzma
            Case "2D-6C-68":                    Return InArchiveFormat.Lzh
            ' ^ 2 byte offset
            Case "1F-9D-90":                    Return InArchiveFormat.Lzw
            Case "60-EA":                       Return InArchiveFormat.Arj
            Case "42-5A-68":                    Return InArchiveFormat.BZip2
            Case "4D-53-43-46":                 Return InArchiveFormat.Cab
            Case "49-54-53-46":                 Return InArchiveFormat.Chm
            Case "21-3C-61-72-63-68-3E-0A-64-65-62-69-61-6E-2D-62-69-6E-61-72-79": Return InArchiveFormat.Deb
            Case "43-44-30-30-31":              Return InArchiveFormat.Iso
            ' ^ 0x8001, 0x8801 or 0x9001 byte offset
            Case "ED-AB-EE-DB":                 Return InArchiveFormat.Rpm
            Case "4D-53-57-49-4D-00-00-00":     Return InArchiveFormat.Wim
            Case "udf":                         Return InArchiveFormat.Udf
            Case "mub":                         Return InArchiveFormat.Mub
            Case "78-61-72-21":                 Return InArchiveFormat.Xar
            ' 0x400 byte offset
            Case "48-2B":                       Return InArchiveFormat.Hfs
            Case "FD-37-7A-58-5A":              Return InArchiveFormat.XZ
            Case "46-4C-56":                    Return InArchiveFormat.Flv
            Case "46-57-53":                    Return InArchiveFormat.Swf
            Case "4D-5A":                       Return InArchiveFormat.PE
            Case "7F-45-4C-46":                 Return InArchiveFormat.Elf
            Case "78":                          Return InArchiveFormat.Dmg
            Case "63-6F-6E-65-63-74-69-78":     Return InArchiveFormat.Vhd
    	End Select
    End Function

    Public Function GetSignature(Format As InArchiveFormat) As String
        Select Case Format
            Case InArchiveFormat.SevenZip:  Return "{37-7A-BC-AF-27-1C}"
            Case InArchiveFormat.GZip:      Return "{1F-8B-08}"
            Case InArchiveFormat.Tar:       Return "{75-73-74-61-72}"
            ' 257 byte offset
            Case InArchiveFormat.Rar4:      Return "{52-61-72-21-1A-07-00}"
            Case InArchiveFormat.Rar:       Return "{52-61-72-21-1A-07-01-00}"
            Case InArchiveFormat.Zip:       Return "{50-4B-03-04}"
            Case InArchiveFormat.Lzma:      Return "{5D-00-00-40-00}"
            Case InArchiveFormat.Lzh:       Return "{2D-6C-68}"
            ' ^ 2 byte offset
            Case InArchiveFormat.Lzw:       Return "{1F-9D-90}"
            Case InArchiveFormat.Arj:       Return "{60-EA}"
            Case InArchiveFormat.BZip2:     Return "{42-5A-68}"
            Case InArchiveFormat.Cab:       Return "{4D-53-43-46}"
            Case InArchiveFormat.Chm:       Return "{49-54-53-46}"
            Case InArchiveFormat.Deb:       Return "{21-3C-61-72-63-68-3E-0A-64-65-62-69-61-6E-2D-62-69-6E-61-72-79}"
            Case InArchiveFormat.Iso:       Return "{43-44-30-30-31}"
            ' ^ 0x8001, 0x8801 or 0x9001 byte offset
            Case InArchiveFormat.Rpm:       Return "{ED-AB-EE-DB}"
            Case InArchiveFormat.Wim:       Return "{4D-53-57-49-4D-00-00-00}"
            Case InArchiveFormat.Udf:       Return "udf"
            Case InArchiveFormat.Mub:       Return "mub"
            Case InArchiveFormat.Xar:       Return "{78-61-72-21}"
            ' 0x400 byte offset
            Case InArchiveFormat.Hfs:       Return "{48-2B}"
            Case InArchiveFormat.XZ:        Return "{FD-37-7A-58-5A}"
            Case InArchiveFormat.Flv:       Return "{46-4C-56}"
            Case InArchiveFormat.Swf:       Return "{46-57-53}"
            Case InArchiveFormat.PE:        Return "{4D-5A}"
            Case InArchiveFormat.Elf:       Return "{7F-45-4C-46}"
            Case InArchiveFormat.Dmg:       Return "{78}"
            Case InArchiveFormat.Vhd:       Return "{63-6F-6E-65-63-74-69-78}"
        End Select
    End Function
End Module