Private Module SimpleTests
    Public Sub RunAllSimpleTests()
        Dim Failed As Boolean
        Dim Message As String

        Dim TempFailed As Boolean
        Dim TempMessage As String
        
        With New Tester("SingleFile", FSO.BuildPath(App.Path, "Source\Test"))
            .CompressAndExtract("HelloWorld_7z", "Hello World.txt", "Hello World.7z")
            .CompressAndExtract("HelloWorld_bz2", "Hello World.txt", "Hello World.bz2", "Hello World")
            .CompressAndExtract("HelloWorld_gz", "Hello World.txt", "Hello World.gz")
            .CompressAndExtract("HelloWorld_tar", "Hello World.txt", "Hello World.tar")
            .CompressAndExtract("HelloWorld_wim", "Hello World.txt", "Hello World.wim")
            .CompressAndExtract("HelloWorld_xz", "Hello World.txt", "Hello World.xz", "Hello World")
            .CompressAndExtract("HelloWorld_zip", "Hello World.txt", "Hello World.zip")
            TempFailed = .Results(TempMessage)
            Message = Message & vbNewLine & TempMessage
            Failed = If(Failed, Failed, TempFailed)
        End With

        With New Tester("ZippedTarball", FSO.BuildPath(App.Path, "Source\Test"))
        	Dim TarFilePath As String = .CompressAndExtractSingleFile("HelloWorld_tar", "Hello World.txt", "Hello World.tar")
            .CompressAndExtract("HelloWorld_tar_gz", TarFilePath, "Hello World.tar.gz")
            .CompressAndExtract("HelloWorld_tar_xz", TarFilePath, "Hello World.tar.xz")
            TempFailed = .Results(TempMessage)
            Message = Message & vbNewLine & TempMessage
            Failed = If(Failed, Failed, TempFailed)
        End With

        With New Tester("MultipleFiles", FSO.BuildPath(App.Path, "Source\Test"))
            Dim MultipleFiles As Variant = Array("random.el.txt", "random.he.txt", "random.ja.txt", "random.ru.txt", "random.zh.txt")
        	.CompressAndExtract("MultipleFiles_7z", MultipleFiles, "MultipleFiles.7z")
            .CompressAndExtract("MultipleFiles_tar", MultipleFiles, "MultipleFiles.tar")
            .CompressAndExtract("MultipleFiles_wim", MultipleFiles, "MultipleFiles.wim")
            .CompressAndExtract("MultipleFiles_zip", MultipleFiles, "MultipleFiles.zip")
            TempFailed = .Results(TempMessage)
            Message = Message & vbNewLine & TempMessage
            Failed = If(Failed, Failed, TempFailed)
        End With

        'Reconstruct empty folders for tests; git does not handle empty foldrss so we need to reconstruct it for source from git.
        RestoreEmptyFolders

        With New Tester("Folders", FSO.BuildPath(App.Path, "Source\Test"))
            Dim Folder  As String = "random texts"
        	.CompressAndExtract("Folders_7z", Folder, "random texts.7z", ".")
            .ViewArchive("Folders_7z\random texts.7z")
            .CompressAndExtract("Folders_tar", Folder, "random texts.tar", ".")
            .ViewArchive("Folders_tar\random texts.tar")
            .CompressAndExtract("Folders_wim", Folder, "random texts.wim", ".")
            .ViewArchive("Folders_wim\random texts.wim")
            .CompressAndExtract("Folders_zip", Folder, "random texts.zip", ".")
            .ViewArchive("Folders_zip\random texts.zip")
            TempFailed = .Results(TempMessage)
            Message = Message & vbNewLine & TempMessage
            Failed = If(Failed, Failed, TempFailed)
        End With

        Debug.Print Message
        If Failed Then
            Err.Raise 1, , "Tests failed"
        End If
    End Sub

    Private Sub RestoreEmptyFolders()
        With FSO
            Dim BasePath As String = .BuildPath(.BuildPath(App.Path, "Source\Test"), "random texts")
            If Not .FolderExists(BasePath) Then
                Err.Raise 5, CurrentComponentName, "Cannot test; the random texts folder is missing. Verify the path."
            End If

            Dim FolderPath As String = .BuildPath(BasePath, "africa")
            If Not .FolderExists(FolderPath) Then .CreateFolder(FolderPath)

            FolderPath = .BuildPath(BasePath, "americas")
            If Not .FolderExists(FolderPath) Then .CreateFolder(FolderPath)

            FolderPath = .BuildPath(BasePath, "americas\central")
            If Not .FolderExists(FolderPath) Then .CreateFolder(FolderPath)

            FolderPath = .BuildPath(BasePath, "americas\north")
            If Not .FolderExists(FolderPath) Then .CreateFolder(FolderPath)

            FolderPath = .BuildPath(BasePath, "americas\south")
            If Not .FolderExists(FolderPath) Then .CreateFolder(FolderPath)
            
            FolderPath = .BuildPath(BasePath, "australia & oceania")
            If Not .FolderExists(FolderPath) Then .CreateFolder(FolderPath)
    	End With
    End Sub

    Public Sub TestHandlers()
        Dim hs As Handlers = New Handlers
        Dim h As Handler

        For Each h In hs
            Debug.Print h.Name, h.Extension, h.Flags, h.ClassIdAsString
        Next
    End Sub
End Module